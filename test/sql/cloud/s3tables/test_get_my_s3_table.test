# name: test/sql/cloud/s3tables/test_get_my_s3_table.test
# description: test integration with iceberg catalog read
# group: [s3tables]

require-env ICEBERG_AWS_REMOTE_AVAILABLE

require-env AWS_ACCESS_KEY_ID

require-env AWS_SECRET_ACCESS_KEY

require avro

require parquet

require iceberg

require httpfs

require aws

statement ok
CREATE SECRET (
    TYPE S3,
    KEY_ID 'admin',
    SECRET 'password',
    ENDPOINT '127.0.0.1:9000',
    URL_STYLE 'path',
    USE_SSL 0
);

statement ok
ATTACH '' AS my_datalake (
    TYPE ICEBERG,
    CLIENT_ID 'admin',
    CLIENT_SECRET 'password',
    ENDPOINT 'http://127.0.0.1:8181'
);
#
# # statement ok
# # select * from my_datalake.default.test_sequence_numbers;
# #
# # mode skip
#
# statement ok
# drop table if exists my_datalake.default.test_sequence_numbers;
#
# statement ok
# create table if not exists my_datalake.default.test_sequence_numbers as select range a from range(100);
#
#
# mode skip

statement ok
CREATE SECRET s3table_secret (
    TYPE s3,
    PROVIDER credential_chain,
    region 'eu-central-1',
    profile 'default'
);

statement ok
attach 'arn:aws:s3tables:eu-central-1:984506134640:bucket/test-athena-table-bucket' as s3_catalog (
    TYPE ICEBERG,
    ENDPOINT_TYPE 'S3_TABLES'
);

statement ok
select * from s3_catalog.default.table9;

mode output_result

statement ok
stest/sql/cloud/s3tables/test_timeout_aws.testelect * from read_avro('s3://18c2226c-da97-4fc6-om37d98brtz5iocyznn5igg38ydrheuc1b--table-s3/metadata/snap-2648518572159615385-c93d2321-c86e-4df8-bbec-d1fa4aadb47a.avro');

#
# mode skip

statement ok
select * from s3_catalog.default.table2;
