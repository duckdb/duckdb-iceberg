# name: test/sql/local/irc/table_properties/test_many_table_properties.test
# group: [table_properties]

require-env ICEBERG_SERVER_AVAILABLE

require avro

require parquet

require iceberg

require httpfs

statement ok
CALL enable_logging('HTTP');

statement ok
set logging_level='debug';

statement ok
CREATE SECRET (
    TYPE S3,
    KEY_ID 'admin',
    SECRET 'password',
    ENDPOINT '127.0.0.1:9000',
    URL_STYLE 'path',
    USE_SSL 0
);


statement ok
ATTACH '' AS my_datalake (
    TYPE ICEBERG,
    CLIENT_ID 'admin',
    CLIENT_SECRET 'password',
    ENDPOINT 'http://127.0.0.1:8181'
);


statement ok
drop table if exists my_datalake.default.many_properties;

statement ok
create table my_datalake.default.many_properties (a int);


loop i 0 2050

# set more than STANDARD vector size properties
statement ok
CALL set_iceberg_table_properties(my_datalake.default.many_properties,
       {
        'new_property_${i}': 'value',
       });

endloop

# Check all properties returned and none are duplicated
query I
select count(*) from iceberg_table_properties(my_datalake.default.many_properties) group by all;
----
2050