# name: test/sql/local/irc/iceberg_catalog_eager_refresh.test
# description: test integration with iceberg catalog read
# group: [irc]

require-env ICEBERG_SERVER_AVAILABLE

require avro

require parquet

require iceberg

require httpfs

# Do not ignore 'HTTP' error messages!
set ignore_error_messages

statement ok
pragma enable_logging('HTTP');

statement ok
set logging_level='debug'

statement ok
CREATE SECRET (
    TYPE S3,
    KEY_ID 'admin',
    SECRET 'password',
    ENDPOINT '127.0.0.1:9000',
    URL_STYLE 'path',
    USE_SSL 0
);


statement ok
ATTACH '' AS my_datalake (
    TYPE ICEBERG,
    CLIENT_ID 'admin',
    CLIENT_SECRET 'password',
    ENDPOINT 'http://127.0.0.1:8181'
);

statement ok
pragma truncate_duckdb_logs;


statement ok
begin transaction

# These happen in the same transaction, so we hit only hit the catalog once

statement ok
select * from my_datalake.default.table_unpartitioned order by all;

statement ok
select * from my_datalake.default.table_more_deletes order by all;

query II
SELECT request.url, response.reason FROM duckdb_logs_parsed('HTTP') WHERE request.type='GET' AND (request.url).starts_with('http://127.0.0.1:8181/v1/') order by timestamp
----
http://127.0.0.1:8181/v1/namespaces	OK
http://127.0.0.1:8181/v1/namespaces/default/tables	OK
http://127.0.0.1:8181/v1/namespaces/default/tables/table_unpartitioned	OK
http://127.0.0.1:8181/v1/namespaces/default/tables/table_more_deletes	OK

statement ok
pragma truncate_duckdb_logs;

statement ok
select * from my_datalake.default.table_more_deletes order by all;

# No extra logs are created because all the metadata was already cached

query II
SELECT request.url, response.reason FROM duckdb_logs_parsed('HTTP') WHERE request.type='GET' AND (request.url).starts_with('http://127.0.0.1:8181/v1/') order by timestamp
----

statement ok
commit

# Now query the same table twice outside of a transaction

statement ok
select * from my_datalake.default.table_more_deletes order by all;

statement ok
select * from my_datalake.default.table_more_deletes order by all;

# The catalog is hit every time, to get a potential refresh of the state of the schemas/tables in it

query II
SELECT request.url, response.reason FROM duckdb_logs_parsed('HTTP') WHERE request.type='GET' AND (request.url).starts_with('http://127.0.0.1:8181/v1/') order by timestamp
----
http://127.0.0.1:8181/v1/namespaces	OK
http://127.0.0.1:8181/v1/namespaces/default/tables	OK
http://127.0.0.1:8181/v1/namespaces/default/tables/table_more_deletes	OK
http://127.0.0.1:8181/v1/namespaces	OK
http://127.0.0.1:8181/v1/namespaces/default/tables	OK
http://127.0.0.1:8181/v1/namespaces/default/tables/table_more_deletes	OK
