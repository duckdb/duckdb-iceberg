# name: test/sql/local/irc/create/test_create_table.test
# description: test create table
# group: [create]

require-env ICEBERG_SERVER_AVAILABLE

require avro

require parquet

require iceberg

require httpfs

# Do not ignore 'HTTP' error messages!
set ignore_error_messages

statement ok
pragma enable_logging('HTTP');

statement ok
set logging_level='debug'

statement ok
CREATE SECRET (
    TYPE S3,
    KEY_ID 'admin',
    SECRET 'password',
    ENDPOINT '127.0.0.1:9000',
    URL_STYLE 'path',
    USE_SSL 0
);


statement ok
ATTACH '' AS my_datalake (
    TYPE ICEBERG,
    CLIENT_ID 'admin',
    CLIENT_SECRET 'password',
    ENDPOINT 'http://127.0.0.1:8181'
);

statement ok
use my_datalake.default

statement ok
begin;

statement ok
create table create_table_t1 (a int, b varchar);

statement ok
insert into create_table_t1 select range a, range::VARCHAR b from range(10);

query II
select * from create_table_t1 order by all;
----
0	0
1	1
2	2
3	3
4	4
5	5
6	6
7	7
8	8
9	9

statement ok
abort;

# table does not oexist
statement error
select * from create_table_t1;
----
<REGEX>:.*does not exist.*

# now commit the table

statement ok
begin;

statement ok
create table create_table_t1 (a int, b varchar);

statement ok
insert into create_table_t1 select range a, range::VARCHAR b from range(5);

statement ok
commit;

query II
select * from create_table_t1 order by all;
----
0	0
1	1
2	2
3	3
4	4

statement ok
create table create_table_t2 (b int, c varchar);

statement ok
insert into create_table_t2 select range*5, (range*5)::VARCHAR from range(5);

query II
select * from create_table_t2;
----
0	0
5	5
10	10
15	15
20	20

# two updates to one table
statement ok
begin;

# creates one update
statement ok
create table create_table_t3 as select range d, range::VARCHAR e from range(100);

# creates a second snapshot update
statement ok
insert into create_table_t3 select range d, range::VARCHAR e from range(100, 200);

statement ok
commit;

# many updates to one table
statement ok
begin;

# creates one update
statement ok
create table create_table_t4 as select range d, range::VARCHAR e from range(100);

loop i 1 15

# creates a second snapshot update
statement ok
insert into create_table_t4 select range d, range::VARCHAR e from range((${i} * 100), (${i} + 1) * 100);

endloop

# commit sends long commit body
statement ok
commit;

query II nosort res_2
select * from create_table_t4;
----

query II nosort res_2
select range d, range::VARCHAR e from range(0,1500);
----
