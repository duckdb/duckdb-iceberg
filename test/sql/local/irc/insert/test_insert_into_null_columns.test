# name: test/sql/local/irc/insert/test_insert_into_null_columns.test
# group: [insert]

require-env ICEBERG_SERVER_AVAILABLE

require avro

require parquet

require iceberg

require httpfs

# Do not ignore 'HTTP' error messages!
set ignore_error_messages

statement ok
CALL enable_logging('HTTP');

statement ok
set logging_level='debug'

statement ok
CREATE SECRET (
    TYPE S3,
    KEY_ID 'admin',
    SECRET 'password',
    ENDPOINT '127.0.0.1:9000',
    URL_STYLE 'path',
    USE_SSL 0
);


statement ok
ATTACH '' AS my_datalake (
    TYPE ICEBERG,
    CLIENT_ID 'admin',
    CLIENT_SECRET 'password',
    ENDPOINT 'http://127.0.0.1:8181'
);

# first test that we can insert nested types
statement ok
insert into my_datalake.default.test_not_null VALUES (
	1,
	'NULL nested type',
	{'street': 'duck street', 'city': 'Metropolis', 'zip': '12345'},
	['123-456-7890', '987-654-3210']::VARCHAR[],
	MAP {'age': '30', 'membership': 'gold'}
);

# cannot insert null into a nested type that is required
statement error
insert into my_datalake.default.test_not_null VALUES (
	1,
	'NULL nested type',
	{'street': NULL, 'city': 'Metropolis', 'zip': '12345'},
	['123-456-7890', '987-654-3210']::VARCHAR[],
	MAP {'age': '30', 'membership': 'gold'}
);
----
<REGEX>:.*Constraint Error.*NOT NULL.*

# cannot insert NULL into primitive type marked NOT NULL
statement error
insert into my_datalake.default.test_not_null VALUES (
	1,
	NULL,
	{'street': 'duck street', 'city': 'swan city', 'zip': '12345'},
	['123-456-7890', '987-654-3210']::VARCHAR[],
	MAP {'age': '30', 'membership': 'gold'}
);
----
<REGEX>:.*Constraint Error.*NOT NULL.*
