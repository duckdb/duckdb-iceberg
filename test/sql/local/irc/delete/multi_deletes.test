# name: test/sql/local/irc/delete/multi_deletes.test
# description: Test ducklake deleting multiple batches
# group: [delete]

require-env ICEBERG_SERVER_AVAILABLE

require avro

require parquet

require iceberg

require httpfs

# Do not ignore 'HTTP' error messages!
set ignore_error_messages

statement ok
CALL enable_logging('HTTP');

statement ok
set logging_level='debug'

statement ok
CREATE SECRET (
    TYPE S3,
    KEY_ID 'admin',
    SECRET 'password',
    ENDPOINT '127.0.0.1:9000',
    URL_STYLE 'path',
    USE_SSL 0
);


statement ok
ATTACH '' AS my_datalake (
    TYPE ICEBERG,
    CLIENT_ID 'admin',
    CLIENT_SECRET 'password',
    ENDPOINT 'http://127.0.0.1:8181'
);

statement ok
create schema if not exists my_datalake.default;

statement ok
DROP TABLE IF EXISTS my_datalake.default.test;

statement ok
CREATE TABLE my_datalake.default.test AS SELECT i id FROM range(10000) t(i);

# multiple deletes of the same table in the same transaction
statement ok
BEGIN;

query I
DELETE FROM my_datalake.default.test WHERE id%8=0;
----
1250

query II
SELECT COUNT(*), SUM(id) FROM my_datalake.default.test;
----
8750	43750000

query I
DELETE FROM my_datalake.default.test WHERE id%4=0;
----
1250

query II
SELECT COUNT(*), SUM(id) FROM my_datalake.default.test;
----
7500	37500000

statement ok
COMMIT

query II
SELECT COUNT(*), SUM(id) FROM my_datalake.default.test;
----
7500	37500000


# deleting from the file again
query I
DELETE FROM my_datalake.default.test WHERE id%2=0
----
2500

query II
SELECT COUNT(*), SUM(id) FROM my_datalake.default.test
----
5000	25000000
