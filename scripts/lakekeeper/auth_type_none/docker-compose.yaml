services:
  minio:
    image: quay.io/minio/minio:RELEASE.2024-05-10T01-41-38Z
    container_name: minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data

  create-bucket:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        sleep 5;
        mc alias set local http://minio:9000 minioadmin minioadmin;
        mc mb -p local/demo;
        mc policy set public local/demo;
        exit 0;
      "

  postgresql:
    image: bitnami/postgresql:16.6.0
    container_name: lakekeeper-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -p 5432 -d postgres" ]
      interval: 2s
      timeout: 10s
      retries: 2
      start_period: 10s
    ports:
      - "5432:5432"

  catalog-migrate:
    image: quay.io/lakekeeper/catalog:latest-main
    depends_on:
      postgresql:
        condition: service_healthy
    command: migrate
    environment:
      - LAKEKEEPER__PG_ENCRYPTION_KEY=This-is-NOT-Secure!
      - LAKEKEEPER__PG_DATABASE_URL_READ=postgresql://postgres:postgres@lakekeeper-postgres:5432/postgres
      - LAKEKEEPER__PG_DATABASE_URL_WRITE=postgresql://postgres:postgres@lakekeeper-postgres:5432/postgres

  lakekeeper:
    image: quay.io/lakekeeper/catalog:latest-main
    container_name: lakekeeper
    depends_on:
      create-bucket:
        condition: service_completed_successfully
      catalog-migrate:
        condition: service_completed_successfully
    ports:
      - "8181:8181"
    environment:
      - LAKEKEEPER__PG_ENCRYPTION_KEY=This-is-NOT-Secure!
      - LAKEKEEPER__PG_DATABASE_URL_READ=postgresql://postgres:postgres@lakekeeper-postgres:5432/postgres
      - LAKEKEEPER__PG_DATABASE_URL_WRITE=postgresql://postgres:postgres@lakekeeper-postgres:5432/postgres
      - LAKEKEEPER_CATALOGS_DEMO_TYPE=iceberg
      - LAKEKEEPER_CATALOGS_DEMO_WAREHOUSE=s3://demo/
      - LAKEKEEPER_CATALOGS_DEMO_AUTHORIZATION_TYPE=none
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_REGION=us-east-1
      - RUST_LOG=info
    command: [ "serve" ]
    healthcheck:
      test: [ "CMD", "/home/nonroot/lakekeeper", "healthcheck" ]
      interval: 1s
      timeout: 10s
      retries: 3
      start_period: 30s

  catalog-bootstrap:
    image: curlimages/curl
    container_name: lakekeeper-tos
    depends_on:
      lakekeeper:
        condition: service_healthy
    restart: "no"
    command:
      - -w
      - "%{http_code}"
      - "-X"
      - "POST"
      - "-v"
      - "http://lakekeeper:8181/management/v1/bootstrap"
      - "-H"
      - "Content-Type: application/json"
      - "--data"
      - '{"accept-terms-of-use": true}'
      - "-o"
      - "/dev/null"

  init-datalakehouse:
    image: curlimages/curl
    container_name: lakekeeper-demo-warehouse-init
    depends_on:
      lakekeeper:
        condition: service_healthy
    restart: "no"
    command:
      - -w
      - "%{http_code}"
      - "-X"
      - "POST"
      - "-v"
      - "http://lakekeeper:8181/management/v1/warehouse"
      - "-H"
      - "Content-Type: application/json"
      - "--data"
      - "@create-demo-warehouse.json"
      - "-o"
      - "/dev/null"
      - "--fail-with-body"
    volumes:
      - ./create-demo-warehouse.json:/home/curl_user/create-demo-warehouse.json


volumes:
  minio-data:
